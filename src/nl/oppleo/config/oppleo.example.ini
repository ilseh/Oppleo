# Example config file. 
# Contains only the bare minimum database connectivity configuration
# Copy this file to oppleo.ini and update the parameters.

[Oppleo]
LOG_FILE = /tmp/Oppleo.log
LOG_LEVEL = info
LOG_MAX_FILESIZE = 524288
LOG_FILE_BACKUP_COUNT = 5

DATABASE_URL = postgresql://<dbuser>:<dbpassword>@<ipaddress>:5432/<dbname>
SQLALCHEMY_TRACK_MODIFICATIONS = True

# The Enable/Disable EVSE GPIO output. GPIO needs to be installed.
EVSE_SWITCH = False
# The EVSE Status LED blink interpreter via GPIO. GPIO needs to be installed.
EVSE_LED_READER = False
# The Buzzer GPIO output. GPIO needs to be installed.
BUZZER = False
# The Oppleo status LED GPIO output. GPIO needs to be installed.
OPPLEO_LED = False
# The MFRC522 Rfid Reader on SPI via GPIO output. GPIO, spidev, and the RFID on SPI need to be installed.
MFRC522_RFID_READER = False

# Front end debug screen (show track trace with exceptions)
DEBUG = False

PYTHONPATH = ''
EXPLAIN_TEMPLATE_LOADING = False

# When Oppleo cannot access the Database with advanced configurations it will run in "Limp mode".  
# Limp mode provides a basic web GUI, aimed to allow configuration of the Database URL.  

# Limp mode opens a security risk, as during database failure a different (rogue) database can be introduced.
# Only use this when configuring
on_db_failure_allow_url_change = False
# Allow a user to see the existing db URL on database failure.
# This opens sequrity risks as during database failure the existing database URL including username and
# password are shown to any user. Only use this when configuring
on_db_failure_show_current_url = False
# The magic password used to restart the system adter a database failure. As there is no database
# access, the regular admin password is not known.
# Allow a user to see the existing db URL on database failure.
on_db_failure_allow_restart = False
# The magic password used to authorize a system restart and changes to the database_url after a database failure. 
# The users are in the database, and as there is no database access, the regular admin password is not known, hence 
# this password is used. Value is a hash from werkzeug.security. Either use import generate_password_hash and 
# use generate_password_hash(password), or use the createpw.py tool in the src directory. The default password here is admin
on_db_failure_magic_password = pbkdf2:sha256:150000$GHnGeFWN$11bff6e60a93404b89a1ea9cbc092827a030992e7c923d2ba2d7247a2d099025

# The IP address to host Oppleo on. The 0.0.0.0 setting will host on all IP adresses. Usually it is only one, and 0.0.0.0 will 
# use that, and follow DHCP changes.
http_host = 0.0.0.0
# The IP port to host Oppleo on. HTTP, so defaults to 80.
http_port = 80

# Prowl is an iOS Push Message system. Oppleo will use Prowl to send notifications if enabled an a proper API key is configured.
# https://www.prowlapp.com/
prowl_enabled = False
prowl_api_key = 

# Seconds timeout for an HTTP POST message
http_timeout = 4

# Pushover is an Push Message system with clients for Android, iOS and browsers (desktop). Oppleo will use Pushover to send notifications 
# if enabled and a proper API key (token) and user key are configured. Oppleo supports sound and device settings.
# https://www.pushover.net/
pushover_enabled = False
pushover_api_key =
pushover_user_key =
pushover_device =
pushover_sound =

# MQTT is a lightweight, publish-subscribe network protocol that transports messages between devices. Oppleo will publish push messages, web socket
# events and additional events including login/logout and websocket connect/disconnect. Oppleo is not listening for inbound MQTT messages.
# https://en.wikipedia.org/wiki/MQTT
mqtt_outbound_enabled = 
# Hostname or IP address of the MQTT broker
mqtt_host =
# The default MQTT port is 1880
mqtt_port = 1883
# Credentials for connecting to the MQTT broker
mqtt_username =
mqtt_password =

# HomeAssistant is a home automation platform. It supports device AutoDiscovery. Oppleo sends the data through MQTT, a lightweight, 
# publish-subscribe network protocol that transports messages between devices. The HomeAssistant installation should have a connected
# MQTT server like Mosquitto ready.
homeassistant_mqtt_enabled = False
# Hostname or IP address of the HomeAssistant MQTT broker
homeassistant_mqtt_host =
# The default MQTT port is 1880
homeassistant_mqtt_port = 1883
homeassistant_mqtt_username =
homeassistant_mqtt_password =

# Vehicle option codes, used to generate the Tesla vehicle image
vehicle_options_overruling = { "Tesla": [{ "vin": "vehicle-vin", "options": "Tesla option codes comma separated" }] }
